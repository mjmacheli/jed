{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive - University of Johannesburg\\\\Documents\\\\GitHub\\\\saoso\\\\node_modules\\\\react-native-video\\\\Video.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport resolveAssetSource from 'react-native/Libraries/Image/resolveAssetSource';\nimport TextTrackType from \"./TextTrackType\";\nimport VideoResizeMode from \"./VideoResizeMode.js\";\nvar styles = StyleSheet.create({\n  base: {\n    overflow: 'hidden'\n  }\n});\nexport { TextTrackType };\n\nvar Video = function (_Component) {\n  _inherits(Video, _Component);\n\n  var _super = _createSuper(Video);\n\n  function Video(props) {\n    var _this;\n\n    _classCallCheck(this, Video);\n\n    _this = _super.call(this, props);\n\n    _this.seek = function (time) {\n      var tolerance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n\n      if (Platform.OS === 'ios') {\n        _this.setNativeProps({\n          seek: {\n            time: time,\n            tolerance: tolerance\n          }\n        });\n      } else {\n        _this.setNativeProps({\n          seek: time\n        });\n      }\n    };\n\n    _this.presentFullscreenPlayer = function () {\n      _this.setNativeProps({\n        fullscreen: true\n      });\n    };\n\n    _this.dismissFullscreenPlayer = function () {\n      _this.setNativeProps({\n        fullscreen: false\n      });\n    };\n\n    _this._assignRoot = function (component) {\n      _this._root = component;\n    };\n\n    _this._onLoadStart = function (event) {\n      if (_this.props.onLoadStart) {\n        _this.props.onLoadStart(event.nativeEvent);\n      }\n    };\n\n    _this._onLoad = function (event) {\n      if (_this.props.onLoad) {\n        _this.props.onLoad(event.nativeEvent);\n      }\n    };\n\n    _this._onError = function (event) {\n      if (_this.props.onError) {\n        _this.props.onError(event.nativeEvent);\n      }\n    };\n\n    _this._onProgress = function (event) {\n      if (_this.props.onProgress) {\n        _this.props.onProgress(event.nativeEvent);\n      }\n    };\n\n    _this._onSeek = function (event) {\n      if (_this.state.showPoster && !_this.props.audioOnly) {\n        _this.setState({\n          showPoster: false\n        });\n      }\n\n      if (_this.props.onSeek) {\n        _this.props.onSeek(event.nativeEvent);\n      }\n    };\n\n    _this._onEnd = function (event) {\n      if (_this.props.onEnd) {\n        _this.props.onEnd(event.nativeEvent);\n      }\n    };\n\n    _this._onTimedMetadata = function (event) {\n      if (_this.props.onTimedMetadata) {\n        _this.props.onTimedMetadata(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerWillPresent = function (event) {\n      if (_this.props.onFullscreenPlayerWillPresent) {\n        _this.props.onFullscreenPlayerWillPresent(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerDidPresent = function (event) {\n      if (_this.props.onFullscreenPlayerDidPresent) {\n        _this.props.onFullscreenPlayerDidPresent(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerWillDismiss = function (event) {\n      if (_this.props.onFullscreenPlayerWillDismiss) {\n        _this.props.onFullscreenPlayerWillDismiss(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerDidDismiss = function (event) {\n      if (_this.props.onFullscreenPlayerDidDismiss) {\n        _this.props.onFullscreenPlayerDidDismiss(event.nativeEvent);\n      }\n    };\n\n    _this._onReadyForDisplay = function (event) {\n      if (_this.props.onReadyForDisplay) {\n        _this.props.onReadyForDisplay(event.nativeEvent);\n      }\n    };\n\n    _this._onPlaybackStalled = function (event) {\n      if (_this.props.onPlaybackStalled) {\n        _this.props.onPlaybackStalled(event.nativeEvent);\n      }\n    };\n\n    _this._onPlaybackResume = function (event) {\n      if (_this.props.onPlaybackResume) {\n        _this.props.onPlaybackResume(event.nativeEvent);\n      }\n    };\n\n    _this._onPlaybackRateChange = function (event) {\n      if (_this.state.showPoster && event.nativeEvent.playbackRate !== 0 && !_this.props.audioOnly) {\n        _this.setState({\n          showPoster: false\n        });\n      }\n\n      if (_this.props.onPlaybackRateChange) {\n        _this.props.onPlaybackRateChange(event.nativeEvent);\n      }\n    };\n\n    _this._onAudioBecomingNoisy = function () {\n      if (_this.props.onAudioBecomingNoisy) {\n        _this.props.onAudioBecomingNoisy();\n      }\n    };\n\n    _this._onAudioFocusChanged = function (event) {\n      if (_this.props.onAudioFocusChanged) {\n        _this.props.onAudioFocusChanged(event.nativeEvent);\n      }\n    };\n\n    _this._onBuffer = function (event) {\n      if (_this.props.onBuffer) {\n        _this.props.onBuffer(event.nativeEvent);\n      }\n    };\n\n    _this.state = {\n      showPoster: true\n    };\n    return _this;\n  }\n\n  _createClass(Video, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n  }, {\n    key: \"toTypeString\",\n    value: function toTypeString(x) {\n      switch (typeof x) {\n        case \"object\":\n          return x instanceof Date ? x.toISOString() : JSON.stringify(x);\n\n        case \"undefined\":\n          return \"\";\n\n        default:\n          return x.toString();\n      }\n    }\n  }, {\n    key: \"stringsOnlyObject\",\n    value: function stringsOnlyObject(obj) {\n      var _this2 = this;\n\n      var strObj = {};\n      Object.keys(obj).forEach(function (x) {\n        strObj[x] = _this2.toTypeString(obj[x]);\n      });\n      return strObj;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var resizeMode = this.props.resizeMode;\n      var source = resolveAssetSource(this.props.source) || {};\n      var uri = source.uri || '';\n\n      if (uri && uri.match(/^\\//)) {\n        uri = \"file://\" + uri;\n      }\n\n      var isNetwork = !!(uri && uri.match(/^https?:/));\n      var isAsset = !!(uri && uri.match(/^(assets-library|file|content|ms-appx|ms-appdata):/));\n      var nativeResizeMode;\n\n      if (resizeMode === VideoResizeMode.stretch) {\n        nativeResizeMode = NativeModules.UIManager.RCTVideo.Constants.ScaleToFill;\n      } else if (resizeMode === VideoResizeMode.contain) {\n        nativeResizeMode = NativeModules.UIManager.RCTVideo.Constants.ScaleAspectFit;\n      } else if (resizeMode === VideoResizeMode.cover) {\n        nativeResizeMode = NativeModules.UIManager.RCTVideo.Constants.ScaleAspectFill;\n      } else {\n        nativeResizeMode = NativeModules.UIManager.RCTVideo.Constants.ScaleNone;\n      }\n\n      var nativeProps = _extends({}, this.props);\n\n      _extends(nativeProps, {\n        style: [styles.base, nativeProps.style],\n        resizeMode: nativeResizeMode,\n        src: {\n          uri: uri,\n          isNetwork: isNetwork,\n          isAsset: isAsset,\n          type: source.type || '',\n          mainVer: source.mainVer || 0,\n          patchVer: source.patchVer || 0,\n          requestHeaders: source.headers ? this.stringsOnlyObject(source.headers) : {}\n        },\n        onVideoLoadStart: this._onLoadStart,\n        onVideoLoad: this._onLoad,\n        onVideoError: this._onError,\n        onVideoProgress: this._onProgress,\n        onVideoSeek: this._onSeek,\n        onVideoEnd: this._onEnd,\n        onVideoBuffer: this._onBuffer,\n        onTimedMetadata: this._onTimedMetadata,\n        onVideoAudioBecomingNoisy: this._onAudioBecomingNoisy,\n        onVideoFullscreenPlayerWillPresent: this._onFullscreenPlayerWillPresent,\n        onVideoFullscreenPlayerDidPresent: this._onFullscreenPlayerDidPresent,\n        onVideoFullscreenPlayerWillDismiss: this._onFullscreenPlayerWillDismiss,\n        onVideoFullscreenPlayerDidDismiss: this._onFullscreenPlayerDidDismiss,\n        onReadyForDisplay: this._onReadyForDisplay,\n        onPlaybackStalled: this._onPlaybackStalled,\n        onPlaybackResume: this._onPlaybackResume,\n        onPlaybackRateChange: this._onPlaybackRateChange,\n        onAudioFocusChanged: this._onAudioFocusChanged,\n        onAudioBecomingNoisy: this._onAudioBecomingNoisy\n      });\n\n      if (this.props.poster && this.state.showPoster) {\n        var posterStyle = {\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0,\n          resizeMode: this.props.posterResizeMode || 'contain'\n        };\n        return React.createElement(View, {\n          style: nativeProps.style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 9\n          }\n        }, React.createElement(RCTVideo, _extends({\n          ref: this._assignRoot\n        }, nativeProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 11\n          }\n        })), React.createElement(Image, {\n          style: posterStyle,\n          source: {\n            uri: this.props.poster\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      return React.createElement(RCTVideo, _extends({\n        ref: this._assignRoot\n      }, nativeProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return Video;\n}(Component);\n\nexport { Video as default };\nVideo.propTypes = _objectSpread({\n  src: PropTypes.object,\n  seek: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n  fullscreen: PropTypes.bool,\n  onVideoLoadStart: PropTypes.func,\n  onVideoLoad: PropTypes.func,\n  onVideoBuffer: PropTypes.func,\n  onVideoError: PropTypes.func,\n  onVideoProgress: PropTypes.func,\n  onVideoSeek: PropTypes.func,\n  onVideoEnd: PropTypes.func,\n  onTimedMetadata: PropTypes.func,\n  onVideoAudioBecomingNoisy: PropTypes.func,\n  onVideoFullscreenPlayerWillPresent: PropTypes.func,\n  onVideoFullscreenPlayerDidPresent: PropTypes.func,\n  onVideoFullscreenPlayerWillDismiss: PropTypes.func,\n  onVideoFullscreenPlayerDidDismiss: PropTypes.func,\n  source: PropTypes.oneOfType([PropTypes.shape({\n    uri: PropTypes.string\n  }), PropTypes.number]),\n  resizeMode: PropTypes.string,\n  poster: PropTypes.string,\n  posterResizeMode: Image.propTypes.resizeMode,\n  repeat: PropTypes.bool,\n  allowsExternalPlayback: PropTypes.bool,\n  selectedAudioTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }),\n  selectedTextTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }),\n  textTracks: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    uri: PropTypes.string.isRequired,\n    type: PropTypes.oneOf([TextTrackType.SRT, TextTrackType.TTML, TextTrackType.VTT]),\n    language: PropTypes.string.isRequired\n  })),\n  paused: PropTypes.bool,\n  muted: PropTypes.bool,\n  volume: PropTypes.number,\n  bufferConfig: PropTypes.shape({\n    minBufferMs: PropTypes.number,\n    maxBufferMs: PropTypes.number,\n    bufferForPlaybackMs: PropTypes.number,\n    bufferForPlaybackAfterRebufferMs: PropTypes.number\n  }),\n  stereoPan: PropTypes.number,\n  rate: PropTypes.number,\n  playInBackground: PropTypes.bool,\n  playWhenInactive: PropTypes.bool,\n  ignoreSilentSwitch: PropTypes.oneOf(['ignore', 'obey']),\n  disableFocus: PropTypes.bool,\n  controls: PropTypes.bool,\n  audioOnly: PropTypes.bool,\n  currentTime: PropTypes.number,\n  progressUpdateInterval: PropTypes.number,\n  useTextureView: PropTypes.bool,\n  onLoadStart: PropTypes.func,\n  onLoad: PropTypes.func,\n  onBuffer: PropTypes.func,\n  onError: PropTypes.func,\n  onProgress: PropTypes.func,\n  onSeek: PropTypes.func,\n  onEnd: PropTypes.func,\n  onFullscreenPlayerWillPresent: PropTypes.func,\n  onFullscreenPlayerDidPresent: PropTypes.func,\n  onFullscreenPlayerWillDismiss: PropTypes.func,\n  onFullscreenPlayerDidDismiss: PropTypes.func,\n  onReadyForDisplay: PropTypes.func,\n  onPlaybackStalled: PropTypes.func,\n  onPlaybackResume: PropTypes.func,\n  onPlaybackRateChange: PropTypes.func,\n  onAudioFocusChanged: PropTypes.func,\n  onAudioBecomingNoisy: PropTypes.func,\n  scaleX: PropTypes.number,\n  scaleY: PropTypes.number,\n  translateX: PropTypes.number,\n  translateY: PropTypes.number,\n  rotation: PropTypes.number\n}, ViewPropTypes);\nvar RCTVideo = requireNativeComponent('RCTVideo', Video, {\n  nativeOnly: {\n    src: true,\n    seek: true,\n    fullscreen: true\n  }\n});","map":{"version":3,"sources":["C:/Users/Dell/OneDrive - University of Johannesburg/Documents/GitHub/saoso/node_modules/react-native-video/Video.js"],"names":["React","Component","PropTypes","requireNativeComponent","resolveAssetSource","TextTrackType","VideoResizeMode","styles","StyleSheet","create","base","overflow","Video","props","seek","time","tolerance","Platform","OS","setNativeProps","presentFullscreenPlayer","fullscreen","dismissFullscreenPlayer","_assignRoot","component","_root","_onLoadStart","event","onLoadStart","nativeEvent","_onLoad","onLoad","_onError","onError","_onProgress","onProgress","_onSeek","state","showPoster","audioOnly","setState","onSeek","_onEnd","onEnd","_onTimedMetadata","onTimedMetadata","_onFullscreenPlayerWillPresent","onFullscreenPlayerWillPresent","_onFullscreenPlayerDidPresent","onFullscreenPlayerDidPresent","_onFullscreenPlayerWillDismiss","onFullscreenPlayerWillDismiss","_onFullscreenPlayerDidDismiss","onFullscreenPlayerDidDismiss","_onReadyForDisplay","onReadyForDisplay","_onPlaybackStalled","onPlaybackStalled","_onPlaybackResume","onPlaybackResume","_onPlaybackRateChange","playbackRate","onPlaybackRateChange","_onAudioBecomingNoisy","onAudioBecomingNoisy","_onAudioFocusChanged","onAudioFocusChanged","_onBuffer","onBuffer","nativeProps","x","Date","toISOString","JSON","stringify","toString","obj","strObj","Object","keys","forEach","toTypeString","resizeMode","source","uri","match","isNetwork","isAsset","nativeResizeMode","stretch","NativeModules","UIManager","RCTVideo","Constants","ScaleToFill","contain","ScaleAspectFit","cover","ScaleAspectFill","ScaleNone","style","src","type","mainVer","patchVer","requestHeaders","headers","stringsOnlyObject","onVideoLoadStart","onVideoLoad","onVideoError","onVideoProgress","onVideoSeek","onVideoEnd","onVideoBuffer","onVideoAudioBecomingNoisy","onVideoFullscreenPlayerWillPresent","onVideoFullscreenPlayerDidPresent","onVideoFullscreenPlayerWillDismiss","onVideoFullscreenPlayerDidDismiss","poster","posterStyle","position","left","top","right","bottom","posterResizeMode","propTypes","object","oneOfType","number","bool","func","shape","string","Image","repeat","allowsExternalPlayback","selectedAudioTrack","isRequired","value","selectedTextTrack","textTracks","arrayOf","title","oneOf","SRT","TTML","VTT","language","paused","muted","volume","bufferConfig","minBufferMs","maxBufferMs","bufferForPlaybackMs","bufferForPlaybackAfterRebufferMs","stereoPan","rate","playInBackground","playWhenInactive","ignoreSilentSwitch","disableFocus","controls","currentTime","progressUpdateInterval","useTextureView","scaleX","scaleY","translateX","translateY","rotation","ViewPropTypes","nativeOnly"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {StyleSheet, requireNativeComponent, NativeModules, View, ViewPropTypes, Image, Platform} from 'react-native';\nimport resolveAssetSource from 'react-native/Libraries/Image/resolveAssetSource';\nimport TextTrackType from './TextTrackType';\nimport VideoResizeMode from './VideoResizeMode.js';\n\nconst styles = StyleSheet.create({\n  base: {\n    overflow: 'hidden',\n  },\n});\n\nexport { TextTrackType };\n\nexport default class Video extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showPoster: true,\n    };\n  }\n\n  setNativeProps(nativeProps) {\n    this._root.setNativeProps(nativeProps);\n  }\n  \n  toTypeString(x) {\n    switch (typeof x) {\n      case \"object\":\n        return x instanceof Date \n          ? x.toISOString() \n          : JSON.stringify(x); // object, null\n      case \"undefined\":\n        return \"\";\n      default: // boolean, number, string\n        return x.toString();      \n    }\n  }\n\n  stringsOnlyObject(obj) {\n    const strObj = {};\n\n    Object.keys(obj).forEach(x => {\n      strObj[x] = this.toTypeString(obj[x]);\n    });\n\n    return strObj;\n  }\n\n  seek = (time, tolerance = 100) => {\n    if (Platform.OS === 'ios') {\n      this.setNativeProps({\n        seek: {\n          time,\n          tolerance\n        }\n      });\n    } else {\n      this.setNativeProps({ seek: time });\n    }\n  };\n\n  presentFullscreenPlayer = () => {\n    this.setNativeProps({ fullscreen: true });\n  };\n\n  dismissFullscreenPlayer = () => {\n    this.setNativeProps({ fullscreen: false });\n  };\n\n  _assignRoot = (component) => {\n    this._root = component;\n  };\n\n  _onLoadStart = (event) => {\n    if (this.props.onLoadStart) {\n      this.props.onLoadStart(event.nativeEvent);\n    }\n  };\n\n  _onLoad = (event) => {\n    if (this.props.onLoad) {\n      this.props.onLoad(event.nativeEvent);\n    }\n  };\n\n  _onError = (event) => {\n    if (this.props.onError) {\n      this.props.onError(event.nativeEvent);\n    }\n  };\n\n  _onProgress = (event) => {\n    if (this.props.onProgress) {\n      this.props.onProgress(event.nativeEvent);\n    }\n  };\n\n  _onSeek = (event) => {\n    if (this.state.showPoster && !this.props.audioOnly) {\n      this.setState({showPoster: false});\n    }\n\n    if (this.props.onSeek) {\n      this.props.onSeek(event.nativeEvent);\n    }\n  };\n\n  _onEnd = (event) => {\n    if (this.props.onEnd) {\n      this.props.onEnd(event.nativeEvent);\n    }\n  };\n\n  _onTimedMetadata = (event) => {\n    if (this.props.onTimedMetadata) {\n      this.props.onTimedMetadata(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerWillPresent = (event) => {\n    if (this.props.onFullscreenPlayerWillPresent) {\n      this.props.onFullscreenPlayerWillPresent(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerDidPresent = (event) => {\n    if (this.props.onFullscreenPlayerDidPresent) {\n      this.props.onFullscreenPlayerDidPresent(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerWillDismiss = (event) => {\n    if (this.props.onFullscreenPlayerWillDismiss) {\n      this.props.onFullscreenPlayerWillDismiss(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerDidDismiss = (event) => {\n    if (this.props.onFullscreenPlayerDidDismiss) {\n      this.props.onFullscreenPlayerDidDismiss(event.nativeEvent);\n    }\n  };\n\n  _onReadyForDisplay = (event) => {\n    if (this.props.onReadyForDisplay) {\n      this.props.onReadyForDisplay(event.nativeEvent);\n    }\n  };\n\n  _onPlaybackStalled = (event) => {\n    if (this.props.onPlaybackStalled) {\n      this.props.onPlaybackStalled(event.nativeEvent);\n    }\n  };\n\n  _onPlaybackResume = (event) => {\n    if (this.props.onPlaybackResume) {\n      this.props.onPlaybackResume(event.nativeEvent);\n    }\n  };\n\n  _onPlaybackRateChange = (event) => {\n    if (this.state.showPoster && event.nativeEvent.playbackRate !== 0 && !this.props.audioOnly) {\n      this.setState({showPoster: false});\n    }\n\n    if (this.props.onPlaybackRateChange) {\n      this.props.onPlaybackRateChange(event.nativeEvent);\n    }\n  };\n\n  _onAudioBecomingNoisy = () => {\n    if (this.props.onAudioBecomingNoisy) {\n      this.props.onAudioBecomingNoisy();\n    }\n  };\n\n  _onAudioFocusChanged = (event) => {\n    if (this.props.onAudioFocusChanged) {\n      this.props.onAudioFocusChanged(event.nativeEvent);\n    }\n  };\n\n  _onBuffer = (event) => {\n    if (this.props.onBuffer) {\n      this.props.onBuffer(event.nativeEvent);\n    }\n  };\n\n  render() {\n    const resizeMode = this.props.resizeMode;\n    const source = resolveAssetSource(this.props.source) || {};\n\n    let uri = source.uri || '';\n    if (uri && uri.match(/^\\//)) {\n      uri = `file://${uri}`;\n    }\n\n    const isNetwork = !!(uri && uri.match(/^https?:/));\n    const isAsset = !!(uri && uri.match(/^(assets-library|file|content|ms-appx|ms-appdata):/));\n\n    let nativeResizeMode;\n    if (resizeMode === VideoResizeMode.stretch) {\n      nativeResizeMode = NativeModules.UIManager.RCTVideo.Constants.ScaleToFill;\n    } else if (resizeMode === VideoResizeMode.contain) {\n      nativeResizeMode = NativeModules.UIManager.RCTVideo.Constants.ScaleAspectFit;\n    } else if (resizeMode === VideoResizeMode.cover) {\n      nativeResizeMode = NativeModules.UIManager.RCTVideo.Constants.ScaleAspectFill;\n    } else {\n      nativeResizeMode = NativeModules.UIManager.RCTVideo.Constants.ScaleNone;\n    }\n\n    const nativeProps = Object.assign({}, this.props);\n    Object.assign(nativeProps, {\n      style: [styles.base, nativeProps.style],\n      resizeMode: nativeResizeMode,\n      src: {\n        uri,\n        isNetwork,\n        isAsset,\n        type: source.type || '',\n        mainVer: source.mainVer || 0,\n        patchVer: source.patchVer || 0,\n        requestHeaders: source.headers ? this.stringsOnlyObject(source.headers) : {}\n      },\n      onVideoLoadStart: this._onLoadStart,\n      onVideoLoad: this._onLoad,\n      onVideoError: this._onError,\n      onVideoProgress: this._onProgress,\n      onVideoSeek: this._onSeek,\n      onVideoEnd: this._onEnd,\n      onVideoBuffer: this._onBuffer,\n      onTimedMetadata: this._onTimedMetadata,\n      onVideoAudioBecomingNoisy: this._onAudioBecomingNoisy,\n      onVideoFullscreenPlayerWillPresent: this._onFullscreenPlayerWillPresent,\n      onVideoFullscreenPlayerDidPresent: this._onFullscreenPlayerDidPresent,\n      onVideoFullscreenPlayerWillDismiss: this._onFullscreenPlayerWillDismiss,\n      onVideoFullscreenPlayerDidDismiss: this._onFullscreenPlayerDidDismiss,\n      onReadyForDisplay: this._onReadyForDisplay,\n      onPlaybackStalled: this._onPlaybackStalled,\n      onPlaybackResume: this._onPlaybackResume,\n      onPlaybackRateChange: this._onPlaybackRateChange,\n      onAudioFocusChanged: this._onAudioFocusChanged,\n      onAudioBecomingNoisy: this._onAudioBecomingNoisy,\n    });\n\n    if (this.props.poster && this.state.showPoster) {\n      const posterStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        resizeMode: this.props.posterResizeMode || 'contain'\n      };\n\n      return (\n        <View style={nativeProps.style}>\n          <RCTVideo\n            ref={this._assignRoot}\n            {...nativeProps}\n          />\n          <Image\n            style={posterStyle}\n            source={{uri: this.props.poster}}\n          />\n        </View>\n      );\n    }\n\n    return (\n      <RCTVideo\n        ref={this._assignRoot}\n        {...nativeProps}\n      />\n    );\n  }\n}\n\nVideo.propTypes = {\n  /* Native only */\n  src: PropTypes.object,\n  seek: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.object\n  ]),\n  fullscreen: PropTypes.bool,\n  onVideoLoadStart: PropTypes.func,\n  onVideoLoad: PropTypes.func,\n  onVideoBuffer: PropTypes.func,\n  onVideoError: PropTypes.func,\n  onVideoProgress: PropTypes.func,\n  onVideoSeek: PropTypes.func,\n  onVideoEnd: PropTypes.func,\n  onTimedMetadata: PropTypes.func,\n  onVideoAudioBecomingNoisy: PropTypes.func,\n  onVideoFullscreenPlayerWillPresent: PropTypes.func,\n  onVideoFullscreenPlayerDidPresent: PropTypes.func,\n  onVideoFullscreenPlayerWillDismiss: PropTypes.func,\n  onVideoFullscreenPlayerDidDismiss: PropTypes.func,\n\n  /* Wrapper component */\n  source: PropTypes.oneOfType([\n    PropTypes.shape({\n      uri: PropTypes.string\n    }),\n    // Opaque type returned by require('./video.mp4')\n    PropTypes.number\n  ]),\n  resizeMode: PropTypes.string,\n  poster: PropTypes.string,\n  posterResizeMode: Image.propTypes.resizeMode,\n  repeat: PropTypes.bool,\n  allowsExternalPlayback: PropTypes.bool,\n  selectedAudioTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ])\n  }),\n  selectedTextTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ])\n  }),\n  textTracks: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      uri: PropTypes.string.isRequired,\n      type: PropTypes.oneOf([\n        TextTrackType.SRT,\n        TextTrackType.TTML,\n        TextTrackType.VTT,\n      ]),\n      language: PropTypes.string.isRequired\n    })\n  ),\n  paused: PropTypes.bool,\n  muted: PropTypes.bool,\n  volume: PropTypes.number,\n  bufferConfig: PropTypes.shape({\n    minBufferMs: PropTypes.number,\n    maxBufferMs: PropTypes.number,\n    bufferForPlaybackMs: PropTypes.number,\n    bufferForPlaybackAfterRebufferMs: PropTypes.number,\n  }),\n  stereoPan: PropTypes.number,\n  rate: PropTypes.number,\n  playInBackground: PropTypes.bool,\n  playWhenInactive: PropTypes.bool,\n  ignoreSilentSwitch: PropTypes.oneOf(['ignore', 'obey']),\n  disableFocus: PropTypes.bool,\n  controls: PropTypes.bool,\n  audioOnly: PropTypes.bool,\n  currentTime: PropTypes.number,\n  progressUpdateInterval: PropTypes.number,\n  useTextureView: PropTypes.bool,\n  onLoadStart: PropTypes.func,\n  onLoad: PropTypes.func,\n  onBuffer: PropTypes.func,\n  onError: PropTypes.func,\n  onProgress: PropTypes.func,\n  onSeek: PropTypes.func,\n  onEnd: PropTypes.func,\n  onFullscreenPlayerWillPresent: PropTypes.func,\n  onFullscreenPlayerDidPresent: PropTypes.func,\n  onFullscreenPlayerWillDismiss: PropTypes.func,\n  onFullscreenPlayerDidDismiss: PropTypes.func,\n  onReadyForDisplay: PropTypes.func,\n  onPlaybackStalled: PropTypes.func,\n  onPlaybackResume: PropTypes.func,\n  onPlaybackRateChange: PropTypes.func,\n  onAudioFocusChanged: PropTypes.func,\n  onAudioBecomingNoisy: PropTypes.func,\n\n  /* Required by react-native */\n  scaleX: PropTypes.number,\n  scaleY: PropTypes.number,\n  translateX: PropTypes.number,\n  translateY: PropTypes.number,\n  rotation: PropTypes.number,\n  ...ViewPropTypes,\n};\n\nconst RCTVideo = requireNativeComponent('RCTVideo', Video, {\n  nativeOnly: {\n    src: true,\n    seek: true,\n    fullscreen: true,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}