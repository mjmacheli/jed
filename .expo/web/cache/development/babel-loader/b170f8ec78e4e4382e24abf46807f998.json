{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive - University of Johannesburg\\\\Documents\\\\GitHub\\\\saoso\\\\src\\\\screens\\\\Login\\\\index.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Container, Content, Text, Item, Input, Button, View, Toast, Icon } from \"native-base\";\nimport IconMD from \"@expo/vector-icons/MaterialIcons\";\nimport { Field, reduxForm } from \"redux-form\";\nimport styles from \"./styles\";\n\nvar commonColor = require(\"../../theme/variables/commonColor\");\n\nvar logo = require(\"../../../assets/logo.png\");\n\nvar required = function required(value) {\n  return value ? undefined : \"Required\";\n};\n\nvar maxLength = function maxLength(max) {\n  return function (value) {\n    return value && value.length > max ? \"Must be \" + max + \" characters or less\" : undefined;\n  };\n};\n\nvar maxLength15 = maxLength(15);\n\nvar minLength = function minLength(min) {\n  return function (value) {\n    return value && value.length < min ? \"Must be \" + min + \" characters or more\" : undefined;\n  };\n};\n\nvar minLength8 = minLength(8);\n\nvar email = function email(value) {\n  return value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ? \"Invalid email address\" : undefined;\n};\n\nvar alphaNumeric = function alphaNumeric(value) {\n  return value && /[^a-zA-Z0-9 ]/i.test(value) ? \"Only alphanumeric characters\" : undefined;\n};\n\nvar LoginForm = function (_Component) {\n  _inherits(LoginForm, _Component);\n\n  var _super = _createSuper(LoginForm);\n\n  function LoginForm(props) {\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      email: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"renderInput\",\n    value: function renderInput(_ref) {\n      var _this2 = this;\n\n      var input = _ref.input,\n          label = _ref.label,\n          type = _ref.type,\n          _ref$meta = _ref.meta,\n          touched = _ref$meta.touched,\n          error = _ref$meta.error,\n          warning = _ref$meta.warning;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, React.createElement(Item, {\n        error: error && touched,\n        style: styles.inputGrp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, React.createElement(IconMD, {\n        active: true,\n        name: input.name === \"email\" ? \"mail-outline\" : \"lock-open\",\n        color: commonColor.contentTextColor,\n        size: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }), React.createElement(Input, _extends({\n        ref: function ref(c) {\n          return _this2.textInput = c;\n        },\n        placeholderTextColor: commonColor.lightTextColor,\n        style: {\n          color: commonColor.contentTextColor\n        },\n        placeholder: input.name === \"email\" ? \"Email\" : \"Password\",\n        secureTextEntry: input.name === \"password\" ? true : false\n      }, input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      })), touched && error ? React.createElement(Icon, {\n        active: true,\n        style: styles.formErrorIcon,\n        onPress: function onPress() {\n          return _this2.textInput._root.clear();\n        },\n        name: \"close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }\n      }) : React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }\n      })), touched && error ? React.createElement(Text, {\n        style: styles.formErrorText1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, error) : React.createElement(Text, {\n        style: styles.formErrorText2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, \"error here\"));\n    }\n  }, {\n    key: \"login\",\n    value: function login() {\n      if (this.props.valid) {\n        this.props.navigation.navigate(\"Category\");\n      } else {\n        Toast.show({\n          text: \"Enter Valid Username & Password!\",\n          duration: 2500,\n          position: \"top\",\n          style: {\n            marginTop: 20\n          },\n          textStyle: {\n            textAlign: \"center\"\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var navigation = this.props.navigation;\n      return React.createElement(Container, {\n        style: styles.backgroundContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }\n      }, React.createElement(StatusBar, {\n        backgroundColor: Platform.OS === \"android\" ? commonColor.statusBarColor : \"transparent\",\n        barStyle: \"light-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }), React.createElement(Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.logoContainerView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: logo,\n        style: styles.imageShadow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.formContainerView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.formView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }\n      }, React.createElement(Field, {\n        name: \"email\",\n        component: this.renderInput,\n        type: \"email\",\n        validate: [email, required],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }\n      }), React.createElement(Field, {\n        name: \"password\",\n        component: this.renderInput,\n        type: \"password\",\n        validate: [alphaNumeric, minLength8, maxLength15, required],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }\n      }), React.createElement(Button, {\n        block: true,\n        style: styles.loginBtn,\n        onPress: function onPress() {\n          return _this3.login();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          lineHeight: 16,\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, \"LOG IN\")), React.createElement(Button, {\n        transparent: true,\n        style: {\n          alignSelf: \"center\"\n        },\n        onPress: function onPress() {\n          return navigation.navigate(\"Drawer\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.forgotPasswordText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }\n      }, \"Forgot Password?\")))), React.createElement(View, {\n        style: styles.footerView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          alignItems: 'center'\n        },\n        onPress: function onPress() {\n          return navigation.navigate(\"SignUp\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.createAccountBtnTxt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }\n      }, \"CREATE NEW SOCIAL ACCOUNT\")))));\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nvar Login = reduxForm({\n  form: \"login\"\n})(LoginForm);\nexport default Login;","map":{"version":3,"sources":["C:/Users/Dell/OneDrive - University of Johannesburg/Documents/GitHub/saoso/src/screens/Login/index.js"],"names":["React","Component","Container","Content","Text","Item","Input","Button","View","Toast","Icon","IconMD","Field","reduxForm","styles","commonColor","require","logo","required","value","undefined","maxLength","max","length","maxLength15","minLength","min","minLength8","email","test","alphaNumeric","LoginForm","props","state","password","input","label","type","meta","touched","error","warning","inputGrp","name","contentTextColor","c","textInput","lightTextColor","color","formErrorIcon","_root","clear","formErrorText1","formErrorText2","valid","navigation","navigate","show","text","duration","position","style","marginTop","textStyle","textAlign","backgroundContainer","Platform","OS","statusBarColor","logoContainerView","imageShadow","formContainerView","formView","renderInput","loginBtn","login","lineHeight","fontWeight","alignSelf","forgotPasswordText","footerView","alignItems","createAccountBtnTxt","Login","form"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Image, StatusBar, Platform, TouchableOpacity } from \"react-native\";\r\nimport {\r\n  Container,\r\n  Content,\r\n  Text,\r\n  Item,\r\n  Input,\r\n  Button,\r\n  View,\r\n  Toast,\r\n  Icon\r\n} from \"native-base\";\r\nimport IconMD from \"react-native-vector-icons/MaterialIcons\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport styles from \"./styles\";\r\n\r\nconst commonColor = require(\"../../theme/variables/commonColor\");\r\nconst logo = require(\"../../../assets/logo.png\");\r\n\r\nconst required = value => (value ? undefined : \"Required\");\r\nconst maxLength = max => value =>\r\n  value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\nconst maxLength15 = maxLength(15);\r\nconst minLength = min => value =>\r\n  value && value.length < min ? `Must be ${min} characters or more` : undefined;\r\nconst minLength8 = minLength(8);\r\nconst email = value =>\r\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n    ? \"Invalid email address\"\r\n    : undefined;\r\nconst alphaNumeric = value =>\r\n  value && /[^a-zA-Z0-9 ]/i.test(value)\r\n    ? \"Only alphanumeric characters\"\r\n    : undefined;\r\n\r\ndeclare type Any = any;\r\n\r\nclass LoginForm extends Component {\r\n  textInput: Any;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n\r\n  renderInput({ input, label, type, meta: { touched, error, warning } }) {\r\n    return (\r\n      <View>\r\n        <Item error={error && touched} style={styles.inputGrp}>\r\n          <IconMD\r\n            active\r\n            name={\r\n              input.name === \"email\" ? \"mail-outline\" : \"lock-open\"\r\n            }\r\n            color={commonColor.contentTextColor}\r\n            size={20}\r\n          />\r\n          <Input\r\n            ref={c => (this.textInput = c)}\r\n            placeholderTextColor={commonColor.lightTextColor}\r\n            style={{ color: commonColor.contentTextColor }}\r\n            placeholder={input.name === \"email\" ? \"Email\" : \"Password\"}\r\n            secureTextEntry={input.name === \"password\" ? true : false}\r\n            {...input}\r\n          />\r\n          {touched && error\r\n            ? <Icon\r\n              active\r\n              style={styles.formErrorIcon}\r\n              onPress={() => this.textInput._root.clear()}\r\n              name=\"close\"\r\n            />\r\n            : <Text />}\r\n        </Item>\r\n        {touched && error\r\n          ? <Text style={styles.formErrorText1}>\r\n            {error}\r\n          </Text>\r\n          : <Text style={styles.formErrorText2}>error here</Text>}\r\n      </View>\r\n    );\r\n  }\r\n\r\n  login() {\r\n    if (this.props.valid) {\r\n      this.props.navigation.navigate(\"Category\");\r\n    } else {\r\n      Toast.show({\r\n        text: \"Enter Valid Username & Password!\",\r\n        duration: 2500,\r\n        position: \"top\",\r\n        style: { marginTop: 20 },\r\n        textStyle: { textAlign: \"center\" }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const navigation = this.props.navigation;\r\n    return (\r\n      <Container style={styles.backgroundContainer}>\r\n        <StatusBar\r\n          backgroundColor={\r\n            Platform.OS === \"android\"\r\n              ? commonColor.statusBarColor\r\n              : \"transparent\"\r\n          }\r\n          barStyle=\"light-content\"\r\n        />\r\n        <Content>\r\n          <View style={styles.logoContainerView}>\r\n            <Image source={logo} style={styles.imageShadow} />\r\n          </View>\r\n          <View style={styles.formContainerView}>\r\n            <View style={styles.formView}>\r\n              <Field\r\n                name=\"email\"\r\n                component={this.renderInput}\r\n                type=\"email\"\r\n                validate={[email, required]}\r\n              />\r\n              <Field\r\n                name=\"password\"\r\n                component={this.renderInput}\r\n                type=\"password\"\r\n                validate={[alphaNumeric, minLength8, maxLength15, required]}\r\n              />\r\n              <Button\r\n                block\r\n                style={styles.loginBtn}\r\n                onPress={() => this.login()}\r\n              >\r\n                <Text style={{ lineHeight: 16, fontWeight: \"bold\" }}>\r\n                  LOG IN\r\n                </Text>\r\n              </Button>\r\n              <Button\r\n                transparent\r\n                style={{ alignSelf: \"center\" }}\r\n                onPress={() => navigation.navigate(\"Drawer\")}\r\n              >\r\n                <Text style={styles.forgotPasswordText}>Forgot Password?</Text>\r\n              </Button>\r\n            </View>\r\n          </View>\r\n          <View style={styles.footerView}>\r\n            <TouchableOpacity\r\n              style={{ alignItems: 'center' }}\r\n              onPress={() => navigation.navigate(\"SignUp\")}\r\n            >\r\n              <Text style={styles.createAccountBtnTxt}>\r\n                CREATE NEW SOCIAL ACCOUNT\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </Content>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst Login = reduxForm({\r\n  form: \"login\"\r\n})(LoginForm);\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}