{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive - University of Johannesburg\\\\Documents\\\\GitHub\\\\saoso\\\\node_modules\\\\react-native-gifted-chat\\\\lib\\\\Day.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport moment from 'moment';\nimport Color from \"./Color\";\nimport { isSameDay } from \"./utils\";\nimport { DATE_FORMAT } from \"./Constant\";\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 5,\n    marginBottom: 10\n  },\n  text: {\n    backgroundColor: Color.backgroundTransparent,\n    color: Color.defaultColor,\n    fontSize: 12,\n    fontWeight: '600'\n  }\n});\n\nvar Day = function (_PureComponent) {\n  _inherits(Day, _PureComponent);\n\n  var _super = _createSuper(Day);\n\n  function Day() {\n    _classCallCheck(this, Day);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Day, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          dateFormat = _this$props.dateFormat,\n          currentMessage = _this$props.currentMessage,\n          previousMessage = _this$props.previousMessage,\n          nextMessage = _this$props.nextMessage,\n          containerStyle = _this$props.containerStyle,\n          wrapperStyle = _this$props.wrapperStyle,\n          textStyle = _this$props.textStyle,\n          inverted = _this$props.inverted;\n\n      if (currentMessage && !isSameDay(currentMessage, inverted ? previousMessage : nextMessage)) {\n        return React.createElement(View, {\n          style: [styles.container, containerStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          style: wrapperStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: [styles.text, textStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }\n        }, moment(currentMessage.createdAt).locale(this.context.getLocale()).format(dateFormat).toUpperCase())));\n      }\n\n      return null;\n    }\n  }]);\n\n  return Day;\n}(PureComponent);\n\nexport { Day as default };\nDay.contextTypes = {\n  getLocale: PropTypes.func\n};\nDay.defaultProps = {\n  currentMessage: {\n    createdAt: null\n  },\n  previousMessage: {},\n  nextMessage: {},\n  containerStyle: {},\n  wrapperStyle: {},\n  textStyle: {},\n  dateFormat: DATE_FORMAT\n};\nDay.propTypes = {\n  currentMessage: PropTypes.object,\n  previousMessage: PropTypes.object,\n  nextMessage: PropTypes.object,\n  inverted: PropTypes.bool,\n  containerStyle: ViewPropTypes.style,\n  wrapperStyle: ViewPropTypes.style,\n  textStyle: PropTypes.any,\n  dateFormat: PropTypes.string\n};","map":{"version":3,"sources":["../src/Day.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAP,IAAgB,aAAhB,QAAqC,OAArC;;;;;AASA,OAAO,MAAP,MAAmB,QAAnB;AAEA,OAAO,KAAP;AAEA,SAAS,SAAT;AACA,SAAS,WAAT;AAGA,IAAM,MAAM,GAAG,UAAU,CAAC,MAAX,CAAkB;AAC/B,EAAA,SAAS,EAAE;AACT,IAAA,UAAU,EAAE,QADH;AAET,IAAA,cAAc,EAAE,QAFP;AAGT,IAAA,SAAS,EAAE,CAHF;AAIT,IAAA,YAAY,EAAE;AAJL,GADoB;AAO/B,EAAA,IAAI,EAAE;AACJ,IAAA,eAAe,EAAE,KAAK,CAAC,qBADnB;AAEJ,IAAA,KAAK,EAAE,KAAK,CAAC,YAFT;AAGJ,IAAA,QAAQ,EAAE,EAHN;AAIJ,IAAA,UAAU,EAAE;AAJR;AAPyB,CAAlB,CAAf;;IA0BqB,G;;;;;;;;;;;;;6BA4Bb;AAAA,wBAUA,KAAK,KAVL;AAAA,UAEF,UAFE,eAEF,UAFE;AAAA,UAGF,cAHE,eAGF,cAHE;AAAA,UAIF,eAJE,eAIF,eAJE;AAAA,UAKF,WALE,eAKF,WALE;AAAA,UAMF,cANE,eAMF,cANE;AAAA,UAOF,YAPE,eAOF,YAPE;AAAA,UAQF,SARE,eAQF,SARE;AAAA,UASF,QATE,eASF,QATE;;AAYJ,UACE,cAAc,IACd,CAAC,SAAS,CAAC,cAAD,EAAiB,QAAQ,GAAG,eAAH,GAAsB,WAA/C,CAFZ,EAGE;AACA,eACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE,CAAC,MAAM,CAAC,SAAR,EAAmB,cAAnB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE,CAAC,MAAM,CAAC,IAAR,EAAc,SAAd,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,MAAM,CAAC,cAAc,CAAC,SAAhB,CAAN,CACE,MADF,CACS,KAAK,OAAL,CAAa,SAAb,EADT,EAEE,MAFF,CAES,UAFT,EAGE,WAHF,EADH,CADF,CADF,CADF;AAYD;;AACD,aAAO,IAAP;AACD;;;;EA1D8B,a;;SAAZ,G;AACZ,GAAA,CAAA,YAAA,GAAe;AACpB,EAAA,SAAS,EAAE,SAAS,CAAC;AADD,CAAf;AAIA,GAAA,CAAA,YAAA,GAAe;AACpB,EAAA,cAAc,EAAE;AAEd,IAAA,SAAS,EAAE;AAFG,GADI;AAKpB,EAAA,eAAe,EAAE,EALG;AAMpB,EAAA,WAAW,EAAE,EANO;AAOpB,EAAA,cAAc,EAAE,EAPI;AAQpB,EAAA,YAAY,EAAE,EARM;AASpB,EAAA,SAAS,EAAE,EATS;AAUpB,EAAA,UAAU,EAAE;AAVQ,CAAf;AAaA,GAAA,CAAA,SAAA,GAAY;AACjB,EAAA,cAAc,EAAE,SAAS,CAAC,MADT;AAEjB,EAAA,eAAe,EAAE,SAAS,CAAC,MAFV;AAGjB,EAAA,WAAW,EAAE,SAAS,CAAC,MAHN;AAIjB,EAAA,QAAQ,EAAE,SAAS,CAAC,IAJH;AAKjB,EAAA,cAAc,EAAE,aAAa,CAAC,KALb;AAMjB,EAAA,YAAY,EAAE,aAAa,CAAC,KANX;AAOjB,EAAA,SAAS,EAAE,SAAS,CAAC,GAPJ;AAQjB,EAAA,UAAU,EAAE,SAAS,CAAC;AARL,CAAZ","sourceRoot":"","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { StyleSheet, Text, View, ViewPropTypes, } from 'react-native';\nimport moment from 'moment';\nimport Color from './Color';\nimport { isSameDay } from './utils';\nimport { DATE_FORMAT } from './Constant';\nconst styles = StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: 5,\n        marginBottom: 10,\n    },\n    text: {\n        backgroundColor: Color.backgroundTransparent,\n        color: Color.defaultColor,\n        fontSize: 12,\n        fontWeight: '600',\n    },\n});\nexport default class Day extends PureComponent {\n    render() {\n        const { dateFormat, currentMessage, previousMessage, nextMessage, containerStyle, wrapperStyle, textStyle, inverted, } = this.props;\n        if (currentMessage &&\n            !isSameDay(currentMessage, inverted ? previousMessage : nextMessage)) {\n            return (<View style={[styles.container, containerStyle]}>\n          <View style={wrapperStyle}>\n            <Text style={[styles.text, textStyle]}>\n              {moment(currentMessage.createdAt)\n                .locale(this.context.getLocale())\n                .format(dateFormat)\n                .toUpperCase()}\n            </Text>\n          </View>\n        </View>);\n        }\n        return null;\n    }\n}\nDay.contextTypes = {\n    getLocale: PropTypes.func,\n};\nDay.defaultProps = {\n    currentMessage: {\n        // TODO: test if crash when createdAt === null\n        createdAt: null,\n    },\n    previousMessage: {},\n    nextMessage: {},\n    containerStyle: {},\n    wrapperStyle: {},\n    textStyle: {},\n    dateFormat: DATE_FORMAT,\n};\nDay.propTypes = {\n    currentMessage: PropTypes.object,\n    previousMessage: PropTypes.object,\n    nextMessage: PropTypes.object,\n    inverted: PropTypes.bool,\n    containerStyle: ViewPropTypes.style,\n    wrapperStyle: ViewPropTypes.style,\n    textStyle: PropTypes.any,\n    dateFormat: PropTypes.string,\n};\n//# sourceMappingURL=Day.js.map"]},"metadata":{},"sourceType":"module"}