{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive - University of Johannesburg\\\\Documents\\\\GitHub\\\\saoso\\\\src\\\\screens\\\\Chat\\\\index.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { GiftedChat } from \"react-native-gifted-chat\";\nimport React, { Component } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Container, Content, Thumbnail, Header, Left, Button, Icon, Title, Right, Body, List, ListItem } from \"native-base\";\nimport { NavigationActions } from \"react-navigation\";\nimport data from \"./data\";\nimport styles from \"./styles\";\n\nvar chatContactsImg = require(\"../../../assets/chatcontacts.png\");\n\nvar navigateAction = function navigateAction(name) {\n  return NavigationActions.navigate({\n    routeName: \"ChatScreen\",\n    params: {\n      name: name\n    }\n  });\n};\n\nvar Chat = function (_Component) {\n  _inherits(Chat, _Component);\n\n  var _super = _createSuper(Chat);\n\n  function Chat(props) {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      showChat: false,\n      messages: [],\n      isLoadingEarlier: false,\n      currentChat: \"\",\n      loadEarlier: true,\n      typingText: \"\",\n      tab: \"chat\"\n    };\n    _this._isMounted = false;\n    _this.onSend = _this.onSend.bind(_assertThisInitialized(_this));\n    _this.onReceive = _this.onReceive.bind(_assertThisInitialized(_this));\n    _this.onLoadEarlier = _this.onLoadEarlier.bind(_assertThisInitialized(_this));\n    _this.renderFooter = _this.renderFooter.bind(_assertThisInitialized(_this));\n    _this._isAlright = null;\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      this.setState({\n        messages: require(\"./messages\")\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"onLoadEarlier\",\n    value: function onLoadEarlier() {\n      var _this2 = this;\n\n      this.setState(function (previousState) {\n        return {\n          isLoadingEarlier: true\n        };\n      });\n      setTimeout(function () {\n        if (_this2._isMounted === true) {\n          _this2.setState(function (previousState) {\n            return {\n              messages: GiftedChat.prepend(previousState.messages, require(\"./oldmessages\")),\n              loadEarlier: false,\n              isLoadingEarlier: false\n            };\n          });\n        }\n      }, 1000);\n    }\n  }, {\n    key: \"onSend\",\n    value: function onSend() {\n      var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.setState(function (previousState) {\n        return {\n          messages: GiftedChat.append(previousState.messages, messages)\n        };\n      });\n    }\n  }, {\n    key: \"onReceive\",\n    value: function onReceive(text) {\n      this.setState(function (previousState) {\n        return {\n          messages: GiftedChat.append(previousState.messages, {\n            _id: Math.round(Math.random() * 1000000),\n            text: text,\n            createdAt: new Date(),\n            user: {\n              _id: 2,\n              name: \"React Native\"\n            }\n          })\n        };\n      });\n    }\n  }, {\n    key: \"answerDemo\",\n    value: function answerDemo(messages) {\n      var _this3 = this;\n\n      if (messages.length > 0) {\n        if (messages[0].image || messages[0].location || !this._isAlright) {\n          this.setState(function (previousState) {\n            return {\n              typingText: \"React Native is typing\"\n            };\n          });\n        }\n      }\n\n      setTimeout(function () {\n        if (_this3._isMounted === true) {\n          if (messages.length > 0) {\n            if (messages[0].image) {\n              _this3.onReceive(\"Nice picture!\");\n            } else if (messages[0].location) {\n              _this3.onReceive(\"My favorite place\");\n            } else if (!_this3._isAlright) {\n              _this3._isAlright = true;\n\n              _this3.onReceive(\"Alright\");\n            }\n          }\n        }\n\n        _this3.setState(function (previousState) {\n          return {\n            typingText: \"\"\n          };\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"_toggleRenderChat\",\n    value: function _toggleRenderChat(personName) {\n      this.setState({\n        showChat: !this.state.showChat,\n        currentChat: personName\n      });\n    }\n  }, {\n    key: \"renderFooter\",\n    value: function renderFooter(props) {\n      if (this.state.typingText !== \"\") {\n        return React.createElement(View, {\n          style: styles.footerContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: styles.footerText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }\n        }, this.state.typingText));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var navigation = this.props.navigation;\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 7\n        }\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }\n      }, React.createElement(Left, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        transparent: true,\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }\n      }, React.createElement(Icon, {\n        name: \"arrow-back\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }\n      }))), React.createElement(Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }\n      }, \"Chat\")), React.createElement(Right, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        transparent: true,\n        onPress: function onPress() {\n          return navigation.openDrawer();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: chatContactsImg,\n        style: styles.headerIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }\n      })))), React.createElement(Content, {\n        style: styles.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }\n      }, React.createElement(List, {\n        removeClippedSubviews: false,\n        dataArray: data,\n        renderRow: function renderRow(dataRow) {\n          return React.createElement(ListItem, {\n            onPress: function onPress() {\n              return navigation.dispatch(navigateAction(dataRow.name));\n            },\n            button: true,\n            thumbnail: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }\n          }, React.createElement(Left, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }\n          }, React.createElement(Thumbnail, {\n            round: true,\n            source: dataRow.thumbnail,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }\n          })), React.createElement(Body, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }\n          }, React.createElement(Text, {\n            style: styles.userNameText,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }\n          }, dataRow.name), React.createElement(Text, {\n            style: styles.messageText,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }\n          }, dataRow.message)), React.createElement(Right, {\n            style: {\n              flexDirection: \"row\",\n              alignItems: \"flex-start\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }\n          }, React.createElement(Text, {\n            style: styles.timeText,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }\n          }, dataRow.time)));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/Dell/OneDrive - University of Johannesburg/Documents/GitHub/saoso/src/screens/Chat/index.js"],"names":["GiftedChat","React","Component","Container","Content","Thumbnail","Header","Left","Button","Icon","Title","Right","Body","List","ListItem","NavigationActions","data","styles","chatContactsImg","require","navigateAction","name","navigate","routeName","params","Chat","props","state","showChat","messages","isLoadingEarlier","currentChat","loadEarlier","typingText","tab","_isMounted","onSend","bind","onReceive","onLoadEarlier","renderFooter","_isAlright","setState","previousState","setTimeout","prepend","append","text","_id","Math","round","random","createdAt","Date","user","length","image","location","personName","footerContainer","footerText","navigation","goBack","openDrawer","headerIcon","content","dataRow","dispatch","thumbnail","userNameText","messageText","message","flexDirection","alignItems","timeText","time"],"mappings":"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","sourcesContent":["import { GiftedChat } from \"react-native-gifted-chat\";\r\nimport React, { Component } from \"react\";\r\nimport { Text, View, Image } from \"react-native\";\r\nimport {\r\n  Container,\r\n  Content,\r\n  Thumbnail,\r\n  Header,\r\n  Left,\r\n  Button,\r\n  Icon,\r\n  Title,\r\n  Right,\r\n  Body,\r\n  List,\r\n  ListItem\r\n} from \"native-base\";\r\nimport { NavigationActions } from \"react-navigation\";\r\nimport data from \"./data\";\r\nimport styles from \"./styles\";\r\n\r\nconst chatContactsImg = require(\"../../../assets/chatcontacts.png\");\r\nconst navigateAction = name =>\r\n  NavigationActions.navigate({\r\n    routeName: \"ChatScreen\",\r\n    params: { name: name }\r\n  });\r\n\r\nclass Chat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showChat: false,\r\n      messages: [],\r\n      isLoadingEarlier: false,\r\n      currentChat: \"\",\r\n      loadEarlier: true,\r\n      typingText: \"\",\r\n      tab: \"chat\"\r\n    };\r\n    this._isMounted = false;\r\n    this.onSend = this.onSend.bind(this);\r\n    this.onReceive = this.onReceive.bind(this);\r\n    this.onLoadEarlier = this.onLoadEarlier.bind(this);\r\n    this.renderFooter = this.renderFooter.bind(this);\r\n    this._isAlright = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.setState({\r\n      messages: require(\"./messages\")\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  onLoadEarlier() {\r\n    this.setState(previousState => ({\r\n      isLoadingEarlier: true\r\n    }));\r\n\r\n    setTimeout(() => {\r\n      if (this._isMounted === true) {\r\n        this.setState(previousState => ({\r\n          messages: GiftedChat.prepend(\r\n            previousState.messages,\r\n            require(\"./oldmessages\")\r\n          ),\r\n          loadEarlier: false,\r\n          isLoadingEarlier: false\r\n        }));\r\n      }\r\n    }, 1000); // simulating network\r\n  }\r\n\r\n  onSend(messages = []) {\r\n    this.setState(previousState => ({\r\n      messages: GiftedChat.append(previousState.messages, messages)\r\n    }));\r\n  }\r\n\r\n  onReceive(text) {\r\n    this.setState(previousState => ({\r\n      messages: GiftedChat.append(previousState.messages, {\r\n        _id: Math.round(Math.random() * 1000000),\r\n        text,\r\n        createdAt: new Date(),\r\n        user: {\r\n          _id: 2,\r\n          name: \"React Native\"\r\n          // avatar: 'https://facebook.github.io/react/img/logo_og.png',\r\n        }\r\n      })\r\n    }));\r\n  }\r\n\r\n  answerDemo(messages) {\r\n    if (messages.length > 0) {\r\n      if (messages[0].image || messages[0].location || !this._isAlright) {\r\n        this.setState(previousState => ({\r\n          typingText: \"React Native is typing\"\r\n        }));\r\n      }\r\n    }\r\n\r\n    setTimeout(() => {\r\n      if (this._isMounted === true) {\r\n        if (messages.length > 0) {\r\n          if (messages[0].image) {\r\n            this.onReceive(\"Nice picture!\");\r\n          } else if (messages[0].location) {\r\n            this.onReceive(\"My favorite place\");\r\n          } else if (!this._isAlright) {\r\n            this._isAlright = true;\r\n            this.onReceive(\"Alright\");\r\n          }\r\n        }\r\n      }\r\n\r\n      this.setState(previousState => ({\r\n        typingText: \"\"\r\n      }));\r\n    }, 1000);\r\n  }\r\n\r\n  _toggleRenderChat(personName) {\r\n    this.setState({\r\n      showChat: !this.state.showChat,\r\n      currentChat: personName\r\n    });\r\n  }\r\n\r\n  renderFooter(props) {\r\n    if (this.state.typingText !== \"\") {\r\n      return (\r\n        <View style={styles.footerContainer}>\r\n          <Text style={styles.footerText}>\r\n            {this.state.typingText}\r\n          </Text>\r\n        </View>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    const navigation = this.props.navigation;\r\n    return (\r\n      <Container>\r\n        <Header>\r\n          <Left>\r\n            <Button transparent onPress={() => navigation.goBack()}>\r\n              <Icon name=\"arrow-back\" />\r\n            </Button>\r\n          </Left>\r\n          <Body>\r\n            <Title>Chat</Title>\r\n          </Body>\r\n          <Right>\r\n            <Button\r\n              transparent\r\n              onPress={() => navigation.openDrawer()}\r\n            >\r\n              <Image source={chatContactsImg} style={styles.headerIcon} />\r\n            </Button>\r\n          </Right>\r\n        </Header>\r\n\r\n        <Content style={styles.content}>\r\n          <List\r\n            removeClippedSubviews={false}\r\n            dataArray={data}\r\n            renderRow={dataRow =>\r\n              <ListItem\r\n                onPress={() =>\r\n                  navigation.dispatch(navigateAction(dataRow.name))}\r\n                button\r\n                thumbnail\r\n              >\r\n                <Left>\r\n                  <Thumbnail round source={dataRow.thumbnail} />\r\n                </Left>\r\n                <Body>\r\n                  <Text style={styles.userNameText}>\r\n                    {dataRow.name}\r\n                  </Text>\r\n                  <Text style={styles.messageText}>\r\n                    {dataRow.message}\r\n                  </Text>\r\n                </Body>\r\n                <Right\r\n                  style={{ flexDirection: \"row\", alignItems: \"flex-start\" }}\r\n                >\r\n                  <Text style={styles.timeText}>\r\n                    {dataRow.time}\r\n                  </Text>\r\n                </Right>\r\n              </ListItem>}\r\n          />\r\n        </Content>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}