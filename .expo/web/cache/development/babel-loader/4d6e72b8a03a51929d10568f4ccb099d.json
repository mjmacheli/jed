{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive - University of Johannesburg\\\\Documents\\\\GitHub\\\\saoso\\\\node_modules\\\\react-navigation\\\\node_modules\\\\react-navigation-stack\\\\dist\\\\views\\\\StackView\\\\StackViewCard.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Screen } from 'react-native-screens';\nimport createPointerEventsContainer from \"./createPointerEventsContainer\";\nvar EPS = 1e-5;\n\nfunction getAccessibilityProps(isActive) {\n  if (Platform.OS === 'ios') {\n    return {\n      accessibilityElementsHidden: !isActive\n    };\n  } else if (Platform.OS === 'android') {\n    return {\n      importantForAccessibility: isActive ? 'yes' : 'no-hide-descendants'\n    };\n  } else {\n    return null;\n  }\n}\n\nvar Card = function (_React$Component) {\n  _inherits(Card, _React$Component);\n\n  var _super = _createSuper(Card);\n\n  function Card() {\n    _classCallCheck(this, Card);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          pointerEvents = _this$props.pointerEvents,\n          style = _this$props.style,\n          position = _this$props.position,\n          transparent = _this$props.transparent,\n          _this$props$scene = _this$props.scene,\n          index = _this$props$scene.index,\n          isActive = _this$props$scene.isActive;\n      var active = transparent || isActive ? 1 : position.interpolate({\n        inputRange: [index, index + 1 - EPS, index + 1],\n        outputRange: [1, 1, 0],\n        extrapolate: 'clamp'\n      });\n      return React.createElement(Screen, _extends({\n        pointerEvents: pointerEvents,\n        onComponentRef: this.props.onComponentRef,\n        style: [transparent ? styles.transparent : styles.main, style],\n        active: active\n      }, getAccessibilityProps(isActive), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 12\n        }\n      }), children);\n    }\n  }]);\n\n  return Card;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  main: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: '#E9E9EF',\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 5\n  }),\n  transparent: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: 'transparent'\n  })\n});\nexport default createPointerEventsContainer(Card);","map":{"version":3,"sources":["C:/Users/Dell/OneDrive - University of Johannesburg/Documents/GitHub/saoso/node_modules/react-navigation/node_modules/react-navigation-stack/dist/views/StackView/StackViewCard.js"],"names":["React","Screen","createPointerEventsContainer","EPS","getAccessibilityProps","isActive","Platform","OS","accessibilityElementsHidden","importantForAccessibility","Card","props","children","pointerEvents","style","position","transparent","scene","index","active","interpolate","inputRange","outputRange","extrapolate","onComponentRef","styles","main","Component","StyleSheet","create","absoluteFillObject","backgroundColor","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,4BAAP;AAEA,IAAMC,GAAG,GAAG,IAAZ;;AAEA,SAASC,qBAAT,CAA+BC,QAA/B,EAAyC;AACvC,MAAIC,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;AACzB,WAAO;AACLC,MAAAA,2BAA2B,EAAE,CAACH;AADzB,KAAP;AAGD,GAJD,MAIO,IAAIC,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;AACpC,WAAO;AACLE,MAAAA,yBAAyB,EAAEJ,QAAQ,GAAG,KAAH,GAAW;AADzC,KAAP;AAGD,GAJM,MAIA;AACL,WAAO,IAAP;AACD;AACF;;IAKKK,I;;;;;;;;;;;;;6BACK;AAAA,wBAQH,KAAKC,KARF;AAAA,UAELC,QAFK,eAELA,QAFK;AAAA,UAGLC,aAHK,eAGLA,aAHK;AAAA,UAILC,KAJK,eAILA,KAJK;AAAA,UAKLC,QALK,eAKLA,QALK;AAAA,UAMLC,WANK,eAMLA,WANK;AAAA,0CAOLC,KAPK;AAAA,UAOIC,KAPJ,qBAOIA,KAPJ;AAAA,UAOWb,QAPX,qBAOWA,QAPX;AAUP,UAAMc,MAAM,GAAGH,WAAW,IAAIX,QAAf,GAA0B,CAA1B,GAA8BU,QAAQ,CAACK,WAAT,CAAqB;AAChEC,QAAAA,UAAU,EAAE,CAACH,KAAD,EAAQA,KAAK,GAAG,CAAR,GAAYf,GAApB,EAAyBe,KAAK,GAAG,CAAjC,CADoD;AAEhEI,QAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFmD;AAGhEC,QAAAA,WAAW,EAAE;AAHmD,OAArB,CAA7C;AAMA,aAAO,oBAAC,MAAD;AAAQ,QAAA,aAAa,EAAEV,aAAvB;AAAsC,QAAA,cAAc,EAAE,KAAKF,KAAL,CAAWa,cAAjE;AAAiF,QAAA,KAAK,EAAE,CAACR,WAAW,GAAGS,MAAM,CAACT,WAAV,GAAwBS,MAAM,CAACC,IAA3C,EAAiDZ,KAAjD,CAAxF;AAAiJ,QAAA,MAAM,EAAEK;AAAzJ,SAAqKf,qBAAqB,CAACC,QAAD,CAA1L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACFO,QADE,CAAP;AAGD;;;;EApBgBZ,KAAK,CAAC2B,S;;AAuBzB,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,IAAI,kCACCE,UAAU,CAACE,kBADZ;AAEFC,IAAAA,eAAe,EAAE,SAFf;AAGFC,IAAAA,WAAW,EAAE,OAHX;AAIFC,IAAAA,YAAY,EAAE;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAJZ;AAKFC,IAAAA,aAAa,EAAE,GALb;AAMFC,IAAAA,YAAY,EAAE;AANZ,IAD2B;AAS/BrB,EAAAA,WAAW,kCACNY,UAAU,CAACE,kBADL;AAETC,IAAAA,eAAe,EAAE;AAFR;AAToB,CAAlB,CAAf;AAeA,eAAe7B,4BAA4B,CAACQ,IAAD,CAA3C","sourcesContent":["import React from 'react';\nimport { StyleSheet, Platform } from 'react-native';\nimport { Screen } from 'react-native-screens';\nimport createPointerEventsContainer from './createPointerEventsContainer';\n\nconst EPS = 1e-5;\n\nfunction getAccessibilityProps(isActive) {\n  if (Platform.OS === 'ios') {\n    return {\n      accessibilityElementsHidden: !isActive\n    };\n  } else if (Platform.OS === 'android') {\n    return {\n      importantForAccessibility: isActive ? 'yes' : 'no-hide-descendants'\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * Component that renders the scene as card for the <StackView />.\n */\nclass Card extends React.Component {\n  render() {\n    const {\n      children,\n      pointerEvents,\n      style,\n      position,\n      transparent,\n      scene: { index, isActive }\n    } = this.props;\n\n    const active = transparent || isActive ? 1 : position.interpolate({\n      inputRange: [index, index + 1 - EPS, index + 1],\n      outputRange: [1, 1, 0],\n      extrapolate: 'clamp'\n    });\n\n    return <Screen pointerEvents={pointerEvents} onComponentRef={this.props.onComponentRef} style={[transparent ? styles.transparent : styles.main, style]} active={active} {...getAccessibilityProps(isActive)}>\n        {children}\n      </Screen>;\n  }\n}\n\nconst styles = StyleSheet.create({\n  main: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: '#E9E9EF',\n    shadowColor: 'black',\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0.2,\n    shadowRadius: 5\n  },\n  transparent: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'transparent'\n  }\n});\n\nexport default createPointerEventsContainer(Card);"]},"metadata":{},"sourceType":"module"}